//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Callplus.CRM.Tabulador.App.WSAgentCommand {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSAgentCommand.WSAgentCommandSoap")]
    public interface WSAgentCommandSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAuthentication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AgentAuthentication(string Login, string Password, bool ForceLogout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAuthentication", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AgentAuthenticationAsync(string Login, string Password, bool ForceLogout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAuthenticationWithPause", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AgentAuthenticationWithPause(string Login, string Password, bool ForceLogout, string reasonCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentAuthenticationWithPause", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AgentAuthenticationWithPauseAsync(string Login, string Password, bool ForceLogout, string reasonCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAgentIpAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateAgentIpAddress(int AgentId, string Ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAgentIpAddress", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateAgentIpAddressAsync(int AgentId, string Ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentLogout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AgentLogout(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentLogout", ReplyAction="*")]
        System.Threading.Tasks.Task AgentLogoutAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentReasonRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AgentReasonRequest(int AgentId, int ReasonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentReasonRequest", ReplyAction="*")]
        System.Threading.Tasks.Task AgentReasonRequestAsync(int AgentId, int ReasonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentReasonRequestByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AgentReasonRequestByCode(int AgentId, string ReasonCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentReasonRequestByCode", ReplyAction="*")]
        System.Threading.Tasks.Task AgentReasonRequestByCodeAsync(int AgentId, string ReasonCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentIdleRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AgentIdleRequest(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgentIdleRequest", ReplyAction="*")]
        System.Threading.Tasks.Task AgentIdleRequestAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThirdPartyIdleRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ThirdPartyIdleRequest(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThirdPartyIdleRequest", ReplyAction="*")]
        System.Threading.Tasks.Task ThirdPartyIdleRequestAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManualCallStateRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ManualCallStateRequest(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ManualCallStateRequest", ReplyAction="*")]
        System.Threading.Tasks.Task ManualCallStateRequestAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndManualCallStateRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EndManualCallStateRequest(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndManualCallStateRequest", ReplyAction="*")]
        System.Threading.Tasks.Task EndManualCallStateRequestAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendManualCallRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendManualCallRequest(int AgentId, string DDD, string PhoneNumber, int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendManualCallRequest", ReplyAction="*")]
        System.Threading.Tasks.Task SendManualCallRequestAsync(int AgentId, string DDD, string PhoneNumber, int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DispositionCall(int AgentId, int DispositionId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCall", ReplyAction="*")]
        System.Threading.Tasks.Task DispositionCallAsync(int AgentId, int DispositionId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void HangupAndDispositionCall(int AgentId, int DispositionId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCall", ReplyAction="*")]
        System.Threading.Tasks.Task HangupAndDispositionCallAsync(int AgentId, int DispositionId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCallByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DispositionCallByCode(int AgentId, string DispositionCode, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCallByCode", ReplyAction="*")]
        System.Threading.Tasks.Task DispositionCallByCodeAsync(int AgentId, string DispositionCode, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCallByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void HangupAndDispositionCallByCode(int AgentId, string DispositionCode, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCallByCode", ReplyAction="*")]
        System.Threading.Tasks.Task HangupAndDispositionCallByCodeAsync(int AgentId, string DispositionCode, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCallBack", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DispositionCallBack(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCallBack", ReplyAction="*")]
        System.Threading.Tasks.Task DispositionCallBackAsync(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCallBack", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void HangupAndDispositionCallBack(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCallBack", ReplyAction="*")]
        System.Threading.Tasks.Task HangupAndDispositionCallBackAsync(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCallBackByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DispositionCallBackByCode(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionCallBackByCode", ReplyAction="*")]
        System.Threading.Tasks.Task DispositionCallBackByCodeAsync(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCallBackByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void HangupAndDispositionCallBackByCode(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupAndDispositionCallBackByCode", ReplyAction="*")]
        System.Threading.Tasks.Task HangupAndDispositionCallBackByCodeAsync(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void HangupRequest(int AgentId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HangupRequest", ReplyAction="*")]
        System.Threading.Tasks.Task HangupRequestAsync(int AgentId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThirdPartyHangupRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ThirdPartyHangupRequest(int AgentId, string ThirdPartyCallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThirdPartyHangupRequest", ReplyAction="*")]
        System.Threading.Tasks.Task ThirdPartyHangupRequestAsync(int AgentId, string ThirdPartyCallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultingRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ConsultingRequest(int AgentId, string PhoneNumber, int CampaignId, string uuiData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultingRequest", ReplyAction="*")]
        System.Threading.Tasks.Task ConsultingRequestAsync(int AgentId, string PhoneNumber, int CampaignId, string uuiData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultingAgentRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ConsultingAgentRequest(int AgentId, int TransferAgentId, string TransferLogin, string uuiData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultingAgentRequest", ReplyAction="*")]
        System.Threading.Tasks.Task ConsultingAgentRequestAsync(int AgentId, int TransferAgentId, string TransferLogin, string uuiData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListDispositions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDisposition[] ListDispositions(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListDispositions", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDisposition[]> ListDispositionsAsync(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListDispositionsEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDispositionEx[] ListDispositionsEx(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListDispositionsEx", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDispositionEx[]> ListDispositionsExAsync(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListReasons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjReason[] ListReasons(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListReasons", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjReason[]> ListReasonsAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCampaignsToChat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[] ListCampaignsToChat(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCampaignsToChat", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[]> ListCampaignsToChatAsync(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCampaignsToConsulting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[] ListCampaignsToConsulting(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCampaignsToConsulting", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[]> ListCampaignsToConsultingAsync(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListActiveCalls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ListActiveCalls(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListActiveCalls", ReplyAction="*")]
        System.Threading.Tasks.Task ListActiveCallsAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartChat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void StartChat(int AgentId, int CampaignId, int ToCampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartChat", ReplyAction="*")]
        System.Threading.Tasks.Task StartChatAsync(int AgentId, int CampaignId, int ToCampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndChat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EndChat(int AgentId, int ChatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndChat", ReplyAction="*")]
        System.Threading.Tasks.Task EndChatAsync(int AgentId, int ChatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrievesCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RetrievesCall(int AgentId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrievesCall", ReplyAction="*")]
        System.Threading.Tasks.Task RetrievesCallAsync(int AgentId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCallRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void TransferCallRequest(int AgentId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferCallRequest", ReplyAction="*")]
        System.Threading.Tasks.Task TransferCallRequestAsync(int AgentId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlindTransferCallRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BlindTransferCallRequest(int agentId, string phoneNumber, string uui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlindTransferCallRequest", ReplyAction="*")]
        System.Threading.Tasks.Task BlindTransferCallRequestAsync(int agentId, string phoneNumber, string uui);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListOnlineAgents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjOnlineAgent[] ListOnlineAgents(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListOnlineAgents", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjOnlineAgent[]> ListOnlineAgentsAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListAvailableOnlineAgents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjAvailableOnlineAgent[] ListAvailableOnlineAgents(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListAvailableOnlineAgents", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjAvailableOnlineAgent[]> ListAvailableOnlineAgentsAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThirdPartyBlindTransferRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ThirdPartyBlindTransferRequest(int AgentId, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThirdPartyBlindTransferRequest", ReplyAction="*")]
        System.Threading.Tasks.Task ThirdPartyBlindTransferRequestAsync(int AgentId, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewChatMsg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void NewChatMsg(int AgentId, int ChatId, string Msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewChatMsg", ReplyAction="*")]
        System.Threading.Tasks.Task NewChatMsgAsync(int AgentId, int ChatId, string Msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMyContact", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendMyContact(int AgentId, int ChatId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMyContact", ReplyAction="*")]
        System.Threading.Tasks.Task SendMyContactAsync(int AgentId, int ChatId, int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RedialRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RedialRequest(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RedialRequest", ReplyAction="*")]
        System.Threading.Tasks.Task RedialRequestAsync(int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarkRecordingRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void MarkRecordingRequest(int AgentId, int CallId, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarkRecordingRequest", ReplyAction="*")]
        System.Threading.Tasks.Task MarkRecordingRequestAsync(int AgentId, int CallId, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCallData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateCallData(int AgentId, int CallId, string CustomerId, string CampaignData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCallData", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateCallDataAsync(int AgentId, int CallId, string CustomerId, string CampaignData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMailingData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateMailingData(int AgentId, string campaignId, string tableName, string CustomerId, string MailingData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMailingData", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateMailingDataAsync(int AgentId, string campaignId, string tableName, string CustomerId, string MailingData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMySupervisor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.User GetMySupervisor(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMySupervisor", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.User> GetMySupervisorAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessageToSupervisor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendMessageToSupervisor(int agentId, int supervisorId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMessageToSupervisor", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SendMessageToSupervisorAsync(int agentId, int supervisorId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCompany[] ListCompanies(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCompany[]> ListCompaniesAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCampaignCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbCampaignCompany[] ListCampaignCompany();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCampaignCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbCampaignCompany[]> ListCampaignCompanyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListPromptsByCompanyId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[] ListPromptsByCompanyId(int agentId, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListPromptsByCompanyId", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[]> ListPromptsByCompanyIdAsync(int agentId, int companyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListPromptsWhereCampaignId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[] ListPromptsWhereCampaignId(int campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListPromptsWhereCampaignId", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[]> ListPromptsWhereCampaignIdAsync(int campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListPromptsByAgentId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[] ListPromptsByAgentId(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListPromptsByAgentId", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[]> ListPromptsByAgentIdAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewPrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void NewPrompt(int agentId, int companyId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewPrompt", ReplyAction="*")]
        System.Threading.Tasks.Task NewPromptAsync(int agentId, int companyId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemovePrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RemovePrompt(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemovePrompt", ReplyAction="*")]
        System.Threading.Tasks.Task RemovePromptAsync(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecPrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RecPrompt(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecPrompt", ReplyAction="*")]
        System.Threading.Tasks.Task RecPromptAsync(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopRecPrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void StopRecPrompt(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopRecPrompt", ReplyAction="*")]
        System.Threading.Tasks.Task StopRecPromptAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayPrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void PlayPrompt(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlayPrompt", ReplyAction="*")]
        System.Threading.Tasks.Task PlayPromptAsync(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopPrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void StopPrompt(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopPrompt", ReplyAction="*")]
        System.Threading.Tasks.Task StopPromptAsync(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitPrompt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CommitPrompt(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CommitPrompt", ReplyAction="*")]
        System.Threading.Tasks.Task CommitPromptAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReadyToWork", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ReadyToWork(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReadyToWork", ReplyAction="*")]
        System.Threading.Tasks.Task ReadyToWorkAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BroadcastMedia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BroadcastMedia(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BroadcastMedia", ReplyAction="*")]
        System.Threading.Tasks.Task BroadcastMediaAsync(int agentId, int promptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopBroadcastMedia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void StopBroadcastMedia(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopBroadcastMedia", ReplyAction="*")]
        System.Threading.Tasks.Task StopBroadcastMediaAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PauseBroadcastMedia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void PauseBroadcastMedia(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PauseBroadcastMedia", ReplyAction="*")]
        System.Threading.Tasks.Task PauseBroadcastMediaAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResumeBroadcastMedia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ResumeBroadcastMedia(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResumeBroadcastMedia", ReplyAction="*")]
        System.Threading.Tasks.Task ResumeBroadcastMediaAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendPreviewCallRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SendPreviewCallRequest(int agentId, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendPreviewCallRequest", ReplyAction="*")]
        System.Threading.Tasks.Task SendPreviewCallRequestAsync(int agentId, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CloseCustomer(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task CloseCustomerAsync(int agentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseCustomerWithDispositionId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CloseCustomerWithDispositionId(int agentId, int dispositionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseCustomerWithDispositionId", ReplyAction="*")]
        System.Threading.Tasks.Task CloseCustomerWithDispositionIdAsync(int agentId, int dispositionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseCustomerWithDispositionCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CloseCustomerWithDispositionCode(int agentId, string dispositionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseCustomerWithDispositionCode", ReplyAction="*")]
        System.Threading.Tasks.Task CloseCustomerWithDispositionCodeAsync(int agentId, string dispositionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WhenAgentAnswered", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WhenAgentAnswered(string uuiData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WhenAgentAnswered", ReplyAction="*")]
        System.Threading.Tasks.Task WhenAgentAnsweredAsync(string uuiData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionScheduledCall", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DispositionScheduledCall(string uuiData, string dispositionCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DispositionScheduledCall", ReplyAction="*")]
        System.Threading.Tasks.Task DispositionScheduledCallAsync(string uuiData, string dispositionCode);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjDisposition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int dispositionIdField;
        
        private string descriptionField;
        
        private DispositionType dispositionTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int DispositionId {
            get {
                return this.dispositionIdField;
            }
            set {
                this.dispositionIdField = value;
                this.RaisePropertyChanged("DispositionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public DispositionType dispositionType {
            get {
                return this.dispositionTypeField;
            }
            set {
                this.dispositionTypeField = value;
                this.RaisePropertyChanged("dispositionType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DispositionType {
        
        /// <remarks/>
        nothing,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Callback,
        
        /// <remarks/>
        DoNotCall,
        
        /// <remarks/>
        CallbackTargetContact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjDbPrompt : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int promptIdField;
        
        private string descriptionField;
        
        private int agentIdField;
        
        private int campaignIdField;
        
        private int companyIdField;
        
        private string timeStampField;
        
        private int userIdAuditField;
        
        private string timeStampAuditField;
        
        private string wavNameField;
        
        private int flagPrivateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int promptId {
            get {
                return this.promptIdField;
            }
            set {
                this.promptIdField = value;
                this.RaisePropertyChanged("promptId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int agentId {
            get {
                return this.agentIdField;
            }
            set {
                this.agentIdField = value;
                this.RaisePropertyChanged("agentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int campaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
                this.RaisePropertyChanged("campaignId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
                this.RaisePropertyChanged("companyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("timeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int userIdAudit {
            get {
                return this.userIdAuditField;
            }
            set {
                this.userIdAuditField = value;
                this.RaisePropertyChanged("userIdAudit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string timeStampAudit {
            get {
                return this.timeStampAuditField;
            }
            set {
                this.timeStampAuditField = value;
                this.RaisePropertyChanged("timeStampAudit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string wavName {
            get {
                return this.wavNameField;
            }
            set {
                this.wavNameField = value;
                this.RaisePropertyChanged("wavName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int flagPrivate {
            get {
                return this.flagPrivateField;
            }
            set {
                this.flagPrivateField = value;
                this.RaisePropertyChanged("flagPrivate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjDbCampaignCompany : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int companyIdField;
        
        private int campaignIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
                this.RaisePropertyChanged("companyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int campaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
                this.RaisePropertyChanged("campaignId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjCompany : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int companyIdField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int CompanyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
                this.RaisePropertyChanged("CompanyId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int userIdField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("userId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjAvailableOnlineAgent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjOnlineAgent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int agentIdField;
        
        private string loginField;
        
        private string agentNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int agentId {
            get {
                return this.agentIdField;
            }
            set {
                this.agentIdField = value;
                this.RaisePropertyChanged("agentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
                this.RaisePropertyChanged("login");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string agentName {
            get {
                return this.agentNameField;
            }
            set {
                this.agentNameField = value;
                this.RaisePropertyChanged("agentName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjAvailableOnlineAgent : ObjOnlineAgent {
        
        private int statusIdField;
        
        private string statusDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int statusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
                this.RaisePropertyChanged("statusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string statusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
                this.RaisePropertyChanged("statusDescription");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjCampaign : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int campaignIdField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int CampaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
                this.RaisePropertyChanged("CampaignId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjReason : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int reasonIdField;
        
        private string descriptionField;
        
        private string reasonCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ReasonId {
            get {
                return this.reasonIdField;
            }
            set {
                this.reasonIdField = value;
                this.RaisePropertyChanged("ReasonId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReasonCode {
            get {
                return this.reasonCodeField;
            }
            set {
                this.reasonCodeField = value;
                this.RaisePropertyChanged("ReasonCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjDispositionEx : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int dispositionIdField;
        
        private string descriptionField;
        
        private string codeField;
        
        private DispositionType dispositionTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int DispositionId {
            get {
                return this.dispositionIdField;
            }
            set {
                this.dispositionIdField = value;
                this.RaisePropertyChanged("DispositionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DispositionType dispositionType {
            get {
                return this.dispositionTypeField;
            }
            set {
                this.dispositionTypeField = value;
                this.RaisePropertyChanged("dispositionType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSAgentCommandSoapChannel : Callplus.CRM.Tabulador.App.WSAgentCommand.WSAgentCommandSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSAgentCommandSoapClient : System.ServiceModel.ClientBase<Callplus.CRM.Tabulador.App.WSAgentCommand.WSAgentCommandSoap>, Callplus.CRM.Tabulador.App.WSAgentCommand.WSAgentCommandSoap {
        
        public WSAgentCommandSoapClient() {
        }
        
        public WSAgentCommandSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSAgentCommandSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSAgentCommandSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSAgentCommandSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AgentAuthentication(string Login, string Password, bool ForceLogout) {
            return base.Channel.AgentAuthentication(Login, Password, ForceLogout);
        }
        
        public System.Threading.Tasks.Task<int> AgentAuthenticationAsync(string Login, string Password, bool ForceLogout) {
            return base.Channel.AgentAuthenticationAsync(Login, Password, ForceLogout);
        }
        
        public int AgentAuthenticationWithPause(string Login, string Password, bool ForceLogout, string reasonCode) {
            return base.Channel.AgentAuthenticationWithPause(Login, Password, ForceLogout, reasonCode);
        }
        
        public System.Threading.Tasks.Task<int> AgentAuthenticationWithPauseAsync(string Login, string Password, bool ForceLogout, string reasonCode) {
            return base.Channel.AgentAuthenticationWithPauseAsync(Login, Password, ForceLogout, reasonCode);
        }
        
        public void UpdateAgentIpAddress(int AgentId, string Ip) {
            base.Channel.UpdateAgentIpAddress(AgentId, Ip);
        }
        
        public System.Threading.Tasks.Task UpdateAgentIpAddressAsync(int AgentId, string Ip) {
            return base.Channel.UpdateAgentIpAddressAsync(AgentId, Ip);
        }
        
        public void AgentLogout(int AgentId) {
            base.Channel.AgentLogout(AgentId);
        }
        
        public System.Threading.Tasks.Task AgentLogoutAsync(int AgentId) {
            return base.Channel.AgentLogoutAsync(AgentId);
        }
        
        public void AgentReasonRequest(int AgentId, int ReasonId) {
            base.Channel.AgentReasonRequest(AgentId, ReasonId);
        }
        
        public System.Threading.Tasks.Task AgentReasonRequestAsync(int AgentId, int ReasonId) {
            return base.Channel.AgentReasonRequestAsync(AgentId, ReasonId);
        }
        
        public void AgentReasonRequestByCode(int AgentId, string ReasonCode) {
            base.Channel.AgentReasonRequestByCode(AgentId, ReasonCode);
        }
        
        public System.Threading.Tasks.Task AgentReasonRequestByCodeAsync(int AgentId, string ReasonCode) {
            return base.Channel.AgentReasonRequestByCodeAsync(AgentId, ReasonCode);
        }
        
        public void AgentIdleRequest(int AgentId) {
            base.Channel.AgentIdleRequest(AgentId);
        }
        
        public System.Threading.Tasks.Task AgentIdleRequestAsync(int AgentId) {
            return base.Channel.AgentIdleRequestAsync(AgentId);
        }
        
        public void ThirdPartyIdleRequest(int AgentId) {
            base.Channel.ThirdPartyIdleRequest(AgentId);
        }
        
        public System.Threading.Tasks.Task ThirdPartyIdleRequestAsync(int AgentId) {
            return base.Channel.ThirdPartyIdleRequestAsync(AgentId);
        }
        
        public void ManualCallStateRequest(int AgentId) {
            base.Channel.ManualCallStateRequest(AgentId);
        }
        
        public System.Threading.Tasks.Task ManualCallStateRequestAsync(int AgentId) {
            return base.Channel.ManualCallStateRequestAsync(AgentId);
        }
        
        public void EndManualCallStateRequest(int AgentId) {
            base.Channel.EndManualCallStateRequest(AgentId);
        }
        
        public System.Threading.Tasks.Task EndManualCallStateRequestAsync(int AgentId) {
            return base.Channel.EndManualCallStateRequestAsync(AgentId);
        }
        
        public void SendManualCallRequest(int AgentId, string DDD, string PhoneNumber, int CampaignId) {
            base.Channel.SendManualCallRequest(AgentId, DDD, PhoneNumber, CampaignId);
        }
        
        public System.Threading.Tasks.Task SendManualCallRequestAsync(int AgentId, string DDD, string PhoneNumber, int CampaignId) {
            return base.Channel.SendManualCallRequestAsync(AgentId, DDD, PhoneNumber, CampaignId);
        }
        
        public void DispositionCall(int AgentId, int DispositionId, int CallId) {
            base.Channel.DispositionCall(AgentId, DispositionId, CallId);
        }
        
        public System.Threading.Tasks.Task DispositionCallAsync(int AgentId, int DispositionId, int CallId) {
            return base.Channel.DispositionCallAsync(AgentId, DispositionId, CallId);
        }
        
        public void HangupAndDispositionCall(int AgentId, int DispositionId, int CallId) {
            base.Channel.HangupAndDispositionCall(AgentId, DispositionId, CallId);
        }
        
        public System.Threading.Tasks.Task HangupAndDispositionCallAsync(int AgentId, int DispositionId, int CallId) {
            return base.Channel.HangupAndDispositionCallAsync(AgentId, DispositionId, CallId);
        }
        
        public void DispositionCallByCode(int AgentId, string DispositionCode, int CallId) {
            base.Channel.DispositionCallByCode(AgentId, DispositionCode, CallId);
        }
        
        public System.Threading.Tasks.Task DispositionCallByCodeAsync(int AgentId, string DispositionCode, int CallId) {
            return base.Channel.DispositionCallByCodeAsync(AgentId, DispositionCode, CallId);
        }
        
        public void HangupAndDispositionCallByCode(int AgentId, string DispositionCode, int CallId) {
            base.Channel.HangupAndDispositionCallByCode(AgentId, DispositionCode, CallId);
        }
        
        public System.Threading.Tasks.Task HangupAndDispositionCallByCodeAsync(int AgentId, string DispositionCode, int CallId) {
            return base.Channel.HangupAndDispositionCallByCodeAsync(AgentId, DispositionCode, CallId);
        }
        
        public void DispositionCallBack(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            base.Channel.DispositionCallBack(AgentId, DispositionId, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public System.Threading.Tasks.Task DispositionCallBackAsync(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            return base.Channel.DispositionCallBackAsync(AgentId, DispositionId, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public void HangupAndDispositionCallBack(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            base.Channel.HangupAndDispositionCallBack(AgentId, DispositionId, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public System.Threading.Tasks.Task HangupAndDispositionCallBackAsync(int AgentId, int DispositionId, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            return base.Channel.HangupAndDispositionCallBackAsync(AgentId, DispositionId, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public void DispositionCallBackByCode(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            base.Channel.DispositionCallBackByCode(AgentId, DispositionCode, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public System.Threading.Tasks.Task DispositionCallBackByCodeAsync(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            return base.Channel.DispositionCallBackByCodeAsync(AgentId, DispositionCode, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public void HangupAndDispositionCallBackByCode(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            base.Channel.HangupAndDispositionCallBackByCode(AgentId, DispositionCode, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public System.Threading.Tasks.Task HangupAndDispositionCallBackByCodeAsync(int AgentId, string DispositionCode, int CallId, string Year, string Month, string Day, string Hour, string Minute, string PhoneNumber, bool SpecificAgent) {
            return base.Channel.HangupAndDispositionCallBackByCodeAsync(AgentId, DispositionCode, CallId, Year, Month, Day, Hour, Minute, PhoneNumber, SpecificAgent);
        }
        
        public void HangupRequest(int AgentId, int CallId) {
            base.Channel.HangupRequest(AgentId, CallId);
        }
        
        public System.Threading.Tasks.Task HangupRequestAsync(int AgentId, int CallId) {
            return base.Channel.HangupRequestAsync(AgentId, CallId);
        }
        
        public void ThirdPartyHangupRequest(int AgentId, string ThirdPartyCallId) {
            base.Channel.ThirdPartyHangupRequest(AgentId, ThirdPartyCallId);
        }
        
        public System.Threading.Tasks.Task ThirdPartyHangupRequestAsync(int AgentId, string ThirdPartyCallId) {
            return base.Channel.ThirdPartyHangupRequestAsync(AgentId, ThirdPartyCallId);
        }
        
        public void ConsultingRequest(int AgentId, string PhoneNumber, int CampaignId, string uuiData) {
            base.Channel.ConsultingRequest(AgentId, PhoneNumber, CampaignId, uuiData);
        }
        
        public System.Threading.Tasks.Task ConsultingRequestAsync(int AgentId, string PhoneNumber, int CampaignId, string uuiData) {
            return base.Channel.ConsultingRequestAsync(AgentId, PhoneNumber, CampaignId, uuiData);
        }
        
        public void ConsultingAgentRequest(int AgentId, int TransferAgentId, string TransferLogin, string uuiData) {
            base.Channel.ConsultingAgentRequest(AgentId, TransferAgentId, TransferLogin, uuiData);
        }
        
        public System.Threading.Tasks.Task ConsultingAgentRequestAsync(int AgentId, int TransferAgentId, string TransferLogin, string uuiData) {
            return base.Channel.ConsultingAgentRequestAsync(AgentId, TransferAgentId, TransferLogin, uuiData);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDisposition[] ListDispositions(int CampaignId) {
            return base.Channel.ListDispositions(CampaignId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDisposition[]> ListDispositionsAsync(int CampaignId) {
            return base.Channel.ListDispositionsAsync(CampaignId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDispositionEx[] ListDispositionsEx(int CampaignId) {
            return base.Channel.ListDispositionsEx(CampaignId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDispositionEx[]> ListDispositionsExAsync(int CampaignId) {
            return base.Channel.ListDispositionsExAsync(CampaignId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjReason[] ListReasons(int AgentId) {
            return base.Channel.ListReasons(AgentId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjReason[]> ListReasonsAsync(int AgentId) {
            return base.Channel.ListReasonsAsync(AgentId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[] ListCampaignsToChat(int CampaignId) {
            return base.Channel.ListCampaignsToChat(CampaignId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[]> ListCampaignsToChatAsync(int CampaignId) {
            return base.Channel.ListCampaignsToChatAsync(CampaignId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[] ListCampaignsToConsulting(int CampaignId) {
            return base.Channel.ListCampaignsToConsulting(CampaignId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCampaign[]> ListCampaignsToConsultingAsync(int CampaignId) {
            return base.Channel.ListCampaignsToConsultingAsync(CampaignId);
        }
        
        public void ListActiveCalls(int AgentId) {
            base.Channel.ListActiveCalls(AgentId);
        }
        
        public System.Threading.Tasks.Task ListActiveCallsAsync(int AgentId) {
            return base.Channel.ListActiveCallsAsync(AgentId);
        }
        
        public void StartChat(int AgentId, int CampaignId, int ToCampaignId) {
            base.Channel.StartChat(AgentId, CampaignId, ToCampaignId);
        }
        
        public System.Threading.Tasks.Task StartChatAsync(int AgentId, int CampaignId, int ToCampaignId) {
            return base.Channel.StartChatAsync(AgentId, CampaignId, ToCampaignId);
        }
        
        public void EndChat(int AgentId, int ChatId) {
            base.Channel.EndChat(AgentId, ChatId);
        }
        
        public System.Threading.Tasks.Task EndChatAsync(int AgentId, int ChatId) {
            return base.Channel.EndChatAsync(AgentId, ChatId);
        }
        
        public void RetrievesCall(int AgentId, int CallId) {
            base.Channel.RetrievesCall(AgentId, CallId);
        }
        
        public System.Threading.Tasks.Task RetrievesCallAsync(int AgentId, int CallId) {
            return base.Channel.RetrievesCallAsync(AgentId, CallId);
        }
        
        public void TransferCallRequest(int AgentId, int CallId) {
            base.Channel.TransferCallRequest(AgentId, CallId);
        }
        
        public System.Threading.Tasks.Task TransferCallRequestAsync(int AgentId, int CallId) {
            return base.Channel.TransferCallRequestAsync(AgentId, CallId);
        }
        
        public void BlindTransferCallRequest(int agentId, string phoneNumber, string uui) {
            base.Channel.BlindTransferCallRequest(agentId, phoneNumber, uui);
        }
        
        public System.Threading.Tasks.Task BlindTransferCallRequestAsync(int agentId, string phoneNumber, string uui) {
            return base.Channel.BlindTransferCallRequestAsync(agentId, phoneNumber, uui);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjOnlineAgent[] ListOnlineAgents(int AgentId) {
            return base.Channel.ListOnlineAgents(AgentId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjOnlineAgent[]> ListOnlineAgentsAsync(int AgentId) {
            return base.Channel.ListOnlineAgentsAsync(AgentId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjAvailableOnlineAgent[] ListAvailableOnlineAgents(int AgentId) {
            return base.Channel.ListAvailableOnlineAgents(AgentId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjAvailableOnlineAgent[]> ListAvailableOnlineAgentsAsync(int AgentId) {
            return base.Channel.ListAvailableOnlineAgentsAsync(AgentId);
        }
        
        public void ThirdPartyBlindTransferRequest(int AgentId, string PhoneNumber) {
            base.Channel.ThirdPartyBlindTransferRequest(AgentId, PhoneNumber);
        }
        
        public System.Threading.Tasks.Task ThirdPartyBlindTransferRequestAsync(int AgentId, string PhoneNumber) {
            return base.Channel.ThirdPartyBlindTransferRequestAsync(AgentId, PhoneNumber);
        }
        
        public void NewChatMsg(int AgentId, int ChatId, string Msg) {
            base.Channel.NewChatMsg(AgentId, ChatId, Msg);
        }
        
        public System.Threading.Tasks.Task NewChatMsgAsync(int AgentId, int ChatId, string Msg) {
            return base.Channel.NewChatMsgAsync(AgentId, ChatId, Msg);
        }
        
        public void SendMyContact(int AgentId, int ChatId, int CallId) {
            base.Channel.SendMyContact(AgentId, ChatId, CallId);
        }
        
        public System.Threading.Tasks.Task SendMyContactAsync(int AgentId, int ChatId, int CallId) {
            return base.Channel.SendMyContactAsync(AgentId, ChatId, CallId);
        }
        
        public void RedialRequest(int AgentId) {
            base.Channel.RedialRequest(AgentId);
        }
        
        public System.Threading.Tasks.Task RedialRequestAsync(int AgentId) {
            return base.Channel.RedialRequestAsync(AgentId);
        }
        
        public void MarkRecordingRequest(int AgentId, int CallId, string Description) {
            base.Channel.MarkRecordingRequest(AgentId, CallId, Description);
        }
        
        public System.Threading.Tasks.Task MarkRecordingRequestAsync(int AgentId, int CallId, string Description) {
            return base.Channel.MarkRecordingRequestAsync(AgentId, CallId, Description);
        }
        
        public void UpdateCallData(int AgentId, int CallId, string CustomerId, string CampaignData) {
            base.Channel.UpdateCallData(AgentId, CallId, CustomerId, CampaignData);
        }
        
        public System.Threading.Tasks.Task UpdateCallDataAsync(int AgentId, int CallId, string CustomerId, string CampaignData) {
            return base.Channel.UpdateCallDataAsync(AgentId, CallId, CustomerId, CampaignData);
        }
        
        public void UpdateMailingData(int AgentId, string campaignId, string tableName, string CustomerId, string MailingData) {
            base.Channel.UpdateMailingData(AgentId, campaignId, tableName, CustomerId, MailingData);
        }
        
        public System.Threading.Tasks.Task UpdateMailingDataAsync(int AgentId, string campaignId, string tableName, string CustomerId, string MailingData) {
            return base.Channel.UpdateMailingDataAsync(AgentId, campaignId, tableName, CustomerId, MailingData);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.User GetMySupervisor(int agentId) {
            return base.Channel.GetMySupervisor(agentId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.User> GetMySupervisorAsync(int agentId) {
            return base.Channel.GetMySupervisorAsync(agentId);
        }
        
        public bool SendMessageToSupervisor(int agentId, int supervisorId, string message) {
            return base.Channel.SendMessageToSupervisor(agentId, supervisorId, message);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageToSupervisorAsync(int agentId, int supervisorId, string message) {
            return base.Channel.SendMessageToSupervisorAsync(agentId, supervisorId, message);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCompany[] ListCompanies(int agentId) {
            return base.Channel.ListCompanies(agentId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjCompany[]> ListCompaniesAsync(int agentId) {
            return base.Channel.ListCompaniesAsync(agentId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbCampaignCompany[] ListCampaignCompany() {
            return base.Channel.ListCampaignCompany();
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbCampaignCompany[]> ListCampaignCompanyAsync() {
            return base.Channel.ListCampaignCompanyAsync();
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[] ListPromptsByCompanyId(int agentId, int companyId) {
            return base.Channel.ListPromptsByCompanyId(agentId, companyId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[]> ListPromptsByCompanyIdAsync(int agentId, int companyId) {
            return base.Channel.ListPromptsByCompanyIdAsync(agentId, companyId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[] ListPromptsWhereCampaignId(int campaignId) {
            return base.Channel.ListPromptsWhereCampaignId(campaignId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[]> ListPromptsWhereCampaignIdAsync(int campaignId) {
            return base.Channel.ListPromptsWhereCampaignIdAsync(campaignId);
        }
        
        public Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[] ListPromptsByAgentId(int agentId) {
            return base.Channel.ListPromptsByAgentId(agentId);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSAgentCommand.ObjDbPrompt[]> ListPromptsByAgentIdAsync(int agentId) {
            return base.Channel.ListPromptsByAgentIdAsync(agentId);
        }
        
        public void NewPrompt(int agentId, int companyId, string description) {
            base.Channel.NewPrompt(agentId, companyId, description);
        }
        
        public System.Threading.Tasks.Task NewPromptAsync(int agentId, int companyId, string description) {
            return base.Channel.NewPromptAsync(agentId, companyId, description);
        }
        
        public void RemovePrompt(int agentId, int promptId) {
            base.Channel.RemovePrompt(agentId, promptId);
        }
        
        public System.Threading.Tasks.Task RemovePromptAsync(int agentId, int promptId) {
            return base.Channel.RemovePromptAsync(agentId, promptId);
        }
        
        public void RecPrompt(int agentId, int promptId) {
            base.Channel.RecPrompt(agentId, promptId);
        }
        
        public System.Threading.Tasks.Task RecPromptAsync(int agentId, int promptId) {
            return base.Channel.RecPromptAsync(agentId, promptId);
        }
        
        public void StopRecPrompt(int agentId) {
            base.Channel.StopRecPrompt(agentId);
        }
        
        public System.Threading.Tasks.Task StopRecPromptAsync(int agentId) {
            return base.Channel.StopRecPromptAsync(agentId);
        }
        
        public void PlayPrompt(int agentId, int promptId) {
            base.Channel.PlayPrompt(agentId, promptId);
        }
        
        public System.Threading.Tasks.Task PlayPromptAsync(int agentId, int promptId) {
            return base.Channel.PlayPromptAsync(agentId, promptId);
        }
        
        public void StopPrompt(int agentId, int promptId) {
            base.Channel.StopPrompt(agentId, promptId);
        }
        
        public System.Threading.Tasks.Task StopPromptAsync(int agentId, int promptId) {
            return base.Channel.StopPromptAsync(agentId, promptId);
        }
        
        public void CommitPrompt(int agentId) {
            base.Channel.CommitPrompt(agentId);
        }
        
        public System.Threading.Tasks.Task CommitPromptAsync(int agentId) {
            return base.Channel.CommitPromptAsync(agentId);
        }
        
        public void ReadyToWork(int agentId) {
            base.Channel.ReadyToWork(agentId);
        }
        
        public System.Threading.Tasks.Task ReadyToWorkAsync(int agentId) {
            return base.Channel.ReadyToWorkAsync(agentId);
        }
        
        public void BroadcastMedia(int agentId, int promptId) {
            base.Channel.BroadcastMedia(agentId, promptId);
        }
        
        public System.Threading.Tasks.Task BroadcastMediaAsync(int agentId, int promptId) {
            return base.Channel.BroadcastMediaAsync(agentId, promptId);
        }
        
        public void StopBroadcastMedia(int agentId) {
            base.Channel.StopBroadcastMedia(agentId);
        }
        
        public System.Threading.Tasks.Task StopBroadcastMediaAsync(int agentId) {
            return base.Channel.StopBroadcastMediaAsync(agentId);
        }
        
        public void PauseBroadcastMedia(int agentId) {
            base.Channel.PauseBroadcastMedia(agentId);
        }
        
        public System.Threading.Tasks.Task PauseBroadcastMediaAsync(int agentId) {
            return base.Channel.PauseBroadcastMediaAsync(agentId);
        }
        
        public void ResumeBroadcastMedia(int agentId) {
            base.Channel.ResumeBroadcastMedia(agentId);
        }
        
        public System.Threading.Tasks.Task ResumeBroadcastMediaAsync(int agentId) {
            return base.Channel.ResumeBroadcastMediaAsync(agentId);
        }
        
        public void SendPreviewCallRequest(int agentId, string phoneNumber) {
            base.Channel.SendPreviewCallRequest(agentId, phoneNumber);
        }
        
        public System.Threading.Tasks.Task SendPreviewCallRequestAsync(int agentId, string phoneNumber) {
            return base.Channel.SendPreviewCallRequestAsync(agentId, phoneNumber);
        }
        
        public void CloseCustomer(int agentId) {
            base.Channel.CloseCustomer(agentId);
        }
        
        public System.Threading.Tasks.Task CloseCustomerAsync(int agentId) {
            return base.Channel.CloseCustomerAsync(agentId);
        }
        
        public void CloseCustomerWithDispositionId(int agentId, int dispositionId) {
            base.Channel.CloseCustomerWithDispositionId(agentId, dispositionId);
        }
        
        public System.Threading.Tasks.Task CloseCustomerWithDispositionIdAsync(int agentId, int dispositionId) {
            return base.Channel.CloseCustomerWithDispositionIdAsync(agentId, dispositionId);
        }
        
        public void CloseCustomerWithDispositionCode(int agentId, string dispositionCode) {
            base.Channel.CloseCustomerWithDispositionCode(agentId, dispositionCode);
        }
        
        public System.Threading.Tasks.Task CloseCustomerWithDispositionCodeAsync(int agentId, string dispositionCode) {
            return base.Channel.CloseCustomerWithDispositionCodeAsync(agentId, dispositionCode);
        }
        
        public void WhenAgentAnswered(string uuiData) {
            base.Channel.WhenAgentAnswered(uuiData);
        }
        
        public System.Threading.Tasks.Task WhenAgentAnsweredAsync(string uuiData) {
            return base.Channel.WhenAgentAnsweredAsync(uuiData);
        }
        
        public void DispositionScheduledCall(string uuiData, string dispositionCode) {
            base.Channel.DispositionScheduledCall(uuiData, dispositionCode);
        }
        
        public System.Threading.Tasks.Task DispositionScheduledCallAsync(string uuiData, string dispositionCode) {
            return base.Channel.DispositionScheduledCallAsync(uuiData, dispositionCode);
        }
    }
}
