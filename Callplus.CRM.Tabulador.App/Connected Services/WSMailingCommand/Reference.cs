//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Callplus.CRM.Tabulador.App.WSMailingCommand {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSMailingCommand.WSMailingCommandSoap")]
    public interface WSMailingCommandSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListMailingsJSON", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ListMailingsJSON(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListMailingsJSON", ReplyAction="*")]
        System.Threading.Tasks.Task ListMailingsJSONAsync(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListMailings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ListMailings(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListMailings", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ListMailingsAsync(int CampaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeMailingStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeMailingStatus(int CampaignId, string MailingName, int State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeMailingStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChangeMailingStatusAsync(int CampaignId, string MailingName, int State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeMailingStatusByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeMailingStatusByName(string MailingName, int State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeMailingStatusByName", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChangeMailingStatusByNameAsync(string MailingName, int State);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertPhoneNumber(string MailingName, string CustomerId, int TypePhoneId, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPhoneNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertPhoneNumberAsync(string MailingName, string CustomerId, int TypePhoneId, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPhoneNumberJSON", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void InsertPhoneNumberJSON(string MailingName, string CustomerId, int TypePhoneId, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertPhoneNumberJSON", ReplyAction="*")]
        System.Threading.Tasks.Task InsertPhoneNumberJSONAsync(string MailingName, string CustomerId, int TypePhoneId, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientJSON", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void FinalizeClientJSON(string MailingName, int DispositionId, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientJSON", ReplyAction="*")]
        System.Threading.Tasks.Task FinalizeClientJSONAsync(string MailingName, int DispositionId, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool FinalizeClient(string MailingName, int DispositionId, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClient", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> FinalizeClientAsync(string MailingName, int DispositionId, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByDispositionCodeJSON", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void FinalizeClientByDispositionCodeJSON(int CampaignId, string MailingName, string DispositionCode, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByDispositionCodeJSON", ReplyAction="*")]
        System.Threading.Tasks.Task FinalizeClientByDispositionCodeJSONAsync(int CampaignId, string MailingName, string DispositionCode, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByDispositionCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool FinalizeClientByDispositionCode(int CampaignId, string MailingName, string DispositionCode, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByDispositionCode", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> FinalizeClientByDispositionCodeAsync(int CampaignId, string MailingName, string DispositionCode, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByPhoneNumberJSON", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void FinalizeClientByPhoneNumberJSON(string MailingName, string DDD, string PhoneNumber, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByPhoneNumberJSON", ReplyAction="*")]
        System.Threading.Tasks.Task FinalizeClientByPhoneNumberJSONAsync(string MailingName, string DDD, string PhoneNumber, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool FinalizeClientByPhoneNumber(string MailingName, string DDD, string PhoneNumber, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinalizeClientByPhoneNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> FinalizeClientByPhoneNumberAsync(string MailingName, string DDD, string PhoneNumber, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertNewReferral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertNewReferral(string MailingName, string CustomerIdOrigin, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertNewReferral", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertNewReferralAsync(string MailingName, string CustomerIdOrigin, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertNewReferralWithDDI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertNewReferralWithDDI(string MailingName, string CustomerIdOrigin, string DDI, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertNewReferralWithDDI", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertNewReferralWithDDIAsync(string MailingName, string CustomerIdOrigin, string DDI, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CustomerCallback", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CustomerCallback(int CampaignId, string MailingName, string CustomerId, string Year, string Month, string Day, string Hour, string Minutes, int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CustomerCallback", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CustomerCallbackAsync(int CampaignId, string MailingName, string CustomerId, string Year, string Month, string Day, string Hour, string Minutes, int AgentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListMailingsByCompanyId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ListMailingsByCompanyId(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListMailingsByCompanyId", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ListMailingsByCompanyIdAsync(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMailingView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummary[] GetMailingView(int CampaignId, string MailingName, bool useMailingFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMailingView", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummary[]> GetMailingViewAsync(int CampaignId, string MailingName, bool useMailingFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMailingRawView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummaryView GetMailingRawView(string MailingName, bool useMailingFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMailingRawView", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummaryView> GetMailingRawViewAsync(string MailingName, bool useMailingFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCustomerMailings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] ListCustomerMailings(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListCustomerMailings", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> ListCustomerMailingsAsync(int CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMailingData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateMailingData(string mailingName, string customerId, string field, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMailingData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateMailingDataAsync(string mailingName, string customerId, string field, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCallData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Callplus.CRM.Tabulador.App.WSMailingCommand.CallDataSummary[] GetCallData(string CrmCode, bool DialerOnly, string DataIni, string DataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCallData", ReplyAction="*")]
        System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSMailingCommand.CallDataSummary[]> GetCallDataAsync(string CrmCode, bool DialerOnly, string DataIni, string DataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCallDataProcessed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetCallDataProcessed(int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCallDataProcessed", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetCallDataProcessedAsync(int CallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCallDataProcessedList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SetCallDataProcessedList(string[] CallIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetCallDataProcessedList", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> SetCallDataProcessedListAsync(string[] CallIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportMailing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ImportMailing(string MailingName, string[] Mailing, bool partialMailing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ImportMailing", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ImportMailingAsync(string MailingName, string[] Mailing, bool partialMailing);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool BlockClient(string MailingName, string CustomerId, string PhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockClient", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> BlockClientAsync(string MailingName, string CustomerId, string PhoneNumber);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MailingSummary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mailingField;
        
        private string statusField;
        
        private int totalCustomersField;
        
        private int availableCustomersField;
        
        private int campaignIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Mailing {
            get {
                return this.mailingField;
            }
            set {
                this.mailingField = value;
                this.RaisePropertyChanged("Mailing");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TotalCustomers {
            get {
                return this.totalCustomersField;
            }
            set {
                this.totalCustomersField = value;
                this.RaisePropertyChanged("TotalCustomers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AvailableCustomers {
            get {
                return this.availableCustomersField;
            }
            set {
                this.availableCustomersField = value;
                this.RaisePropertyChanged("AvailableCustomers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int CampaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
                this.RaisePropertyChanged("CampaignId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CallDataSummary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long callIdField;
        
        private int campaignIdField;
        
        private int dispositionIdField;
        
        private System.DateTime callStartField;
        
        private System.DateTime callEndField;
        
        private System.DateTime wrapStartField;
        
        private System.DateTime wrapEndField;
        
        private string phoneNumberField;
        
        private System.Nullable<int> agentIdField;
        
        private string mailingNameField;
        
        private string extraFieldsField;
        
        private string customerIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long CallId {
            get {
                return this.callIdField;
            }
            set {
                this.callIdField = value;
                this.RaisePropertyChanged("CallId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int CampaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
                this.RaisePropertyChanged("CampaignId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int DispositionId {
            get {
                return this.dispositionIdField;
            }
            set {
                this.dispositionIdField = value;
                this.RaisePropertyChanged("DispositionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime CallStart {
            get {
                return this.callStartField;
            }
            set {
                this.callStartField = value;
                this.RaisePropertyChanged("CallStart");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime CallEnd {
            get {
                return this.callEndField;
            }
            set {
                this.callEndField = value;
                this.RaisePropertyChanged("CallEnd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime WrapStart {
            get {
                return this.wrapStartField;
            }
            set {
                this.wrapStartField = value;
                this.RaisePropertyChanged("WrapStart");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime WrapEnd {
            get {
                return this.wrapEndField;
            }
            set {
                this.wrapEndField = value;
                this.RaisePropertyChanged("WrapEnd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<int> AgentId {
            get {
                return this.agentIdField;
            }
            set {
                this.agentIdField = value;
                this.RaisePropertyChanged("AgentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MailingName {
            get {
                return this.mailingNameField;
            }
            set {
                this.mailingNameField = value;
                this.RaisePropertyChanged("MailingName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ExtraFields {
            get {
                return this.extraFieldsField;
            }
            set {
                this.extraFieldsField = value;
                this.RaisePropertyChanged("ExtraFields");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
                this.RaisePropertyChanged("CustomerId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MailingSummaryView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mailingField;
        
        private string statusField;
        
        private int totalCustomersField;
        
        private int availableCustomersField;
        
        private int totalCustomersAppliedOnDialerField;
        
        private int availableCustomersAppliedOnDialerField;
        
        private int mailingCountAppliedOnDialerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Mailing {
            get {
                return this.mailingField;
            }
            set {
                this.mailingField = value;
                this.RaisePropertyChanged("Mailing");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TotalCustomers {
            get {
                return this.totalCustomersField;
            }
            set {
                this.totalCustomersField = value;
                this.RaisePropertyChanged("TotalCustomers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int AvailableCustomers {
            get {
                return this.availableCustomersField;
            }
            set {
                this.availableCustomersField = value;
                this.RaisePropertyChanged("AvailableCustomers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int TotalCustomersAppliedOnDialer {
            get {
                return this.totalCustomersAppliedOnDialerField;
            }
            set {
                this.totalCustomersAppliedOnDialerField = value;
                this.RaisePropertyChanged("TotalCustomersAppliedOnDialer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int AvailableCustomersAppliedOnDialer {
            get {
                return this.availableCustomersAppliedOnDialerField;
            }
            set {
                this.availableCustomersAppliedOnDialerField = value;
                this.RaisePropertyChanged("AvailableCustomersAppliedOnDialer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int MailingCountAppliedOnDialer {
            get {
                return this.mailingCountAppliedOnDialerField;
            }
            set {
                this.mailingCountAppliedOnDialerField = value;
                this.RaisePropertyChanged("MailingCountAppliedOnDialer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSMailingCommandSoapChannel : Callplus.CRM.Tabulador.App.WSMailingCommand.WSMailingCommandSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSMailingCommandSoapClient : System.ServiceModel.ClientBase<Callplus.CRM.Tabulador.App.WSMailingCommand.WSMailingCommandSoap>, Callplus.CRM.Tabulador.App.WSMailingCommand.WSMailingCommandSoap {
        
        public WSMailingCommandSoapClient() {
        }
        
        public WSMailingCommandSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSMailingCommandSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSMailingCommandSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSMailingCommandSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ListMailingsJSON(int CampaignId) {
            base.Channel.ListMailingsJSON(CampaignId);
        }
        
        public System.Threading.Tasks.Task ListMailingsJSONAsync(int CampaignId) {
            return base.Channel.ListMailingsJSONAsync(CampaignId);
        }
        
        public string[] ListMailings(int CampaignId) {
            return base.Channel.ListMailings(CampaignId);
        }
        
        public System.Threading.Tasks.Task<string[]> ListMailingsAsync(int CampaignId) {
            return base.Channel.ListMailingsAsync(CampaignId);
        }
        
        public bool ChangeMailingStatus(int CampaignId, string MailingName, int State) {
            return base.Channel.ChangeMailingStatus(CampaignId, MailingName, State);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeMailingStatusAsync(int CampaignId, string MailingName, int State) {
            return base.Channel.ChangeMailingStatusAsync(CampaignId, MailingName, State);
        }
        
        public bool ChangeMailingStatusByName(string MailingName, int State) {
            return base.Channel.ChangeMailingStatusByName(MailingName, State);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeMailingStatusByNameAsync(string MailingName, int State) {
            return base.Channel.ChangeMailingStatusByNameAsync(MailingName, State);
        }
        
        public bool InsertPhoneNumber(string MailingName, string CustomerId, int TypePhoneId, string PhoneNumber) {
            return base.Channel.InsertPhoneNumber(MailingName, CustomerId, TypePhoneId, PhoneNumber);
        }
        
        public System.Threading.Tasks.Task<bool> InsertPhoneNumberAsync(string MailingName, string CustomerId, int TypePhoneId, string PhoneNumber) {
            return base.Channel.InsertPhoneNumberAsync(MailingName, CustomerId, TypePhoneId, PhoneNumber);
        }
        
        public void InsertPhoneNumberJSON(string MailingName, string CustomerId, int TypePhoneId, string phoneNumber) {
            base.Channel.InsertPhoneNumberJSON(MailingName, CustomerId, TypePhoneId, phoneNumber);
        }
        
        public System.Threading.Tasks.Task InsertPhoneNumberJSONAsync(string MailingName, string CustomerId, int TypePhoneId, string phoneNumber) {
            return base.Channel.InsertPhoneNumberJSONAsync(MailingName, CustomerId, TypePhoneId, phoneNumber);
        }
        
        public void FinalizeClientJSON(string MailingName, int DispositionId, string CustomerId) {
            base.Channel.FinalizeClientJSON(MailingName, DispositionId, CustomerId);
        }
        
        public System.Threading.Tasks.Task FinalizeClientJSONAsync(string MailingName, int DispositionId, string CustomerId) {
            return base.Channel.FinalizeClientJSONAsync(MailingName, DispositionId, CustomerId);
        }
        
        public bool FinalizeClient(string MailingName, int DispositionId, string CustomerId) {
            return base.Channel.FinalizeClient(MailingName, DispositionId, CustomerId);
        }
        
        public System.Threading.Tasks.Task<bool> FinalizeClientAsync(string MailingName, int DispositionId, string CustomerId) {
            return base.Channel.FinalizeClientAsync(MailingName, DispositionId, CustomerId);
        }
        
        public void FinalizeClientByDispositionCodeJSON(int CampaignId, string MailingName, string DispositionCode, string CustomerId) {
            base.Channel.FinalizeClientByDispositionCodeJSON(CampaignId, MailingName, DispositionCode, CustomerId);
        }
        
        public System.Threading.Tasks.Task FinalizeClientByDispositionCodeJSONAsync(int CampaignId, string MailingName, string DispositionCode, string CustomerId) {
            return base.Channel.FinalizeClientByDispositionCodeJSONAsync(CampaignId, MailingName, DispositionCode, CustomerId);
        }
        
        public bool FinalizeClientByDispositionCode(int CampaignId, string MailingName, string DispositionCode, string CustomerId) {
            return base.Channel.FinalizeClientByDispositionCode(CampaignId, MailingName, DispositionCode, CustomerId);
        }
        
        public System.Threading.Tasks.Task<bool> FinalizeClientByDispositionCodeAsync(int CampaignId, string MailingName, string DispositionCode, string CustomerId) {
            return base.Channel.FinalizeClientByDispositionCodeAsync(CampaignId, MailingName, DispositionCode, CustomerId);
        }
        
        public void FinalizeClientByPhoneNumberJSON(string MailingName, string DDD, string PhoneNumber, string CustomerId) {
            base.Channel.FinalizeClientByPhoneNumberJSON(MailingName, DDD, PhoneNumber, CustomerId);
        }
        
        public System.Threading.Tasks.Task FinalizeClientByPhoneNumberJSONAsync(string MailingName, string DDD, string PhoneNumber, string CustomerId) {
            return base.Channel.FinalizeClientByPhoneNumberJSONAsync(MailingName, DDD, PhoneNumber, CustomerId);
        }
        
        public bool FinalizeClientByPhoneNumber(string MailingName, string DDD, string PhoneNumber, string CustomerId) {
            return base.Channel.FinalizeClientByPhoneNumber(MailingName, DDD, PhoneNumber, CustomerId);
        }
        
        public System.Threading.Tasks.Task<bool> FinalizeClientByPhoneNumberAsync(string MailingName, string DDD, string PhoneNumber, string CustomerId) {
            return base.Channel.FinalizeClientByPhoneNumberAsync(MailingName, DDD, PhoneNumber, CustomerId);
        }
        
        public bool InsertNewReferral(string MailingName, string CustomerIdOrigin, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId) {
            return base.Channel.InsertNewReferral(MailingName, CustomerIdOrigin, DDD, PhoneNumber, ReferredName, Year, Month, Day, Hour, Minutes, AgentId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertNewReferralAsync(string MailingName, string CustomerIdOrigin, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId) {
            return base.Channel.InsertNewReferralAsync(MailingName, CustomerIdOrigin, DDD, PhoneNumber, ReferredName, Year, Month, Day, Hour, Minutes, AgentId);
        }
        
        public bool InsertNewReferralWithDDI(string MailingName, string CustomerIdOrigin, string DDI, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId) {
            return base.Channel.InsertNewReferralWithDDI(MailingName, CustomerIdOrigin, DDI, DDD, PhoneNumber, ReferredName, Year, Month, Day, Hour, Minutes, AgentId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertNewReferralWithDDIAsync(string MailingName, string CustomerIdOrigin, string DDI, string DDD, string PhoneNumber, string ReferredName, string Year, string Month, string Day, string Hour, string Minutes, int AgentId) {
            return base.Channel.InsertNewReferralWithDDIAsync(MailingName, CustomerIdOrigin, DDI, DDD, PhoneNumber, ReferredName, Year, Month, Day, Hour, Minutes, AgentId);
        }
        
        public bool CustomerCallback(int CampaignId, string MailingName, string CustomerId, string Year, string Month, string Day, string Hour, string Minutes, int AgentId) {
            return base.Channel.CustomerCallback(CampaignId, MailingName, CustomerId, Year, Month, Day, Hour, Minutes, AgentId);
        }
        
        public System.Threading.Tasks.Task<bool> CustomerCallbackAsync(int CampaignId, string MailingName, string CustomerId, string Year, string Month, string Day, string Hour, string Minutes, int AgentId) {
            return base.Channel.CustomerCallbackAsync(CampaignId, MailingName, CustomerId, Year, Month, Day, Hour, Minutes, AgentId);
        }
        
        public string[] ListMailingsByCompanyId(int CompanyId) {
            return base.Channel.ListMailingsByCompanyId(CompanyId);
        }
        
        public System.Threading.Tasks.Task<string[]> ListMailingsByCompanyIdAsync(int CompanyId) {
            return base.Channel.ListMailingsByCompanyIdAsync(CompanyId);
        }
        
        public Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummary[] GetMailingView(int CampaignId, string MailingName, bool useMailingFilter) {
            return base.Channel.GetMailingView(CampaignId, MailingName, useMailingFilter);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummary[]> GetMailingViewAsync(int CampaignId, string MailingName, bool useMailingFilter) {
            return base.Channel.GetMailingViewAsync(CampaignId, MailingName, useMailingFilter);
        }
        
        public Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummaryView GetMailingRawView(string MailingName, bool useMailingFilter) {
            return base.Channel.GetMailingRawView(MailingName, useMailingFilter);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSMailingCommand.MailingSummaryView> GetMailingRawViewAsync(string MailingName, bool useMailingFilter) {
            return base.Channel.GetMailingRawViewAsync(MailingName, useMailingFilter);
        }
        
        public string[] ListCustomerMailings(int CompanyId) {
            return base.Channel.ListCustomerMailings(CompanyId);
        }
        
        public System.Threading.Tasks.Task<string[]> ListCustomerMailingsAsync(int CompanyId) {
            return base.Channel.ListCustomerMailingsAsync(CompanyId);
        }
        
        public bool UpdateMailingData(string mailingName, string customerId, string field, string data) {
            return base.Channel.UpdateMailingData(mailingName, customerId, field, data);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMailingDataAsync(string mailingName, string customerId, string field, string data) {
            return base.Channel.UpdateMailingDataAsync(mailingName, customerId, field, data);
        }
        
        public Callplus.CRM.Tabulador.App.WSMailingCommand.CallDataSummary[] GetCallData(string CrmCode, bool DialerOnly, string DataIni, string DataFim) {
            return base.Channel.GetCallData(CrmCode, DialerOnly, DataIni, DataFim);
        }
        
        public System.Threading.Tasks.Task<Callplus.CRM.Tabulador.App.WSMailingCommand.CallDataSummary[]> GetCallDataAsync(string CrmCode, bool DialerOnly, string DataIni, string DataFim) {
            return base.Channel.GetCallDataAsync(CrmCode, DialerOnly, DataIni, DataFim);
        }
        
        public bool SetCallDataProcessed(int CallId) {
            return base.Channel.SetCallDataProcessed(CallId);
        }
        
        public System.Threading.Tasks.Task<bool> SetCallDataProcessedAsync(int CallId) {
            return base.Channel.SetCallDataProcessedAsync(CallId);
        }
        
        public bool SetCallDataProcessedList(string[] CallIdList) {
            return base.Channel.SetCallDataProcessedList(CallIdList);
        }
        
        public System.Threading.Tasks.Task<bool> SetCallDataProcessedListAsync(string[] CallIdList) {
            return base.Channel.SetCallDataProcessedListAsync(CallIdList);
        }
        
        public string ImportMailing(string MailingName, string[] Mailing, bool partialMailing) {
            return base.Channel.ImportMailing(MailingName, Mailing, partialMailing);
        }
        
        public System.Threading.Tasks.Task<string> ImportMailingAsync(string MailingName, string[] Mailing, bool partialMailing) {
            return base.Channel.ImportMailingAsync(MailingName, Mailing, partialMailing);
        }
        
        public bool BlockClient(string MailingName, string CustomerId, string PhoneNumber) {
            return base.Channel.BlockClient(MailingName, CustomerId, PhoneNumber);
        }
        
        public System.Threading.Tasks.Task<bool> BlockClientAsync(string MailingName, string CustomerId, string PhoneNumber) {
            return base.Channel.BlockClientAsync(MailingName, CustomerId, PhoneNumber);
        }
    }
}
